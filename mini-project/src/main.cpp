#include "puzzle.h"
#include "importer.h"
#include <chrono>
#include <vector>


int main(int argc, char *argv[]) {
    
    // std::string sudokuLine = "..2...5...1.7.5.2.4...9...7.49...73.8.1.3.4.9.36...21.2...8...4.8.9.2.6...7...8..";
    // std::string sudokuLine = ".......85...21...996..8.1..5..8...16.........89...6..7..9.7..523...54...48.......";
    std::string sudokuLine = "..............3.85..1.2.......5.7.....4...1...9.......5......73..2.1........4...9";
                         //  "132649785758213649964785123543897216276531894891426537619378452327154968485962371"
    // std::string sudokuLine = "132..9785758213649.647851235..89721627653.89489142653.6193..45232.15496848596237.";
    /*

    ., ., . | ., ., . | ., 8, 5
    ., ., . | 2, 1, . | ., ., 9
    9, 6, . | ., 8, . | 1, ., .
    --------+----------+--------
    5, ., . | 8, ., . | ., 1, 6
    ., ., . | ., ., . | ., ., .
    8, 9, . | ., ., 6 | ., ., 7
    --------+----------+--------
    ., ., 9 | ., 7, . | ., 5, 2
    3, ., . | ., 5, 4 | ., ., .
    4, 8, . | ., ., . | ., ., .

    1, 3, 2 | 6 ,4 ,9  | 7 ,8 ,5
    7, 5, 8 | 2 ,1 ,3  | 6 ,4 ,9
    9, 6, 4 | 7 ,8 ,5  | 1 ,2 ,3
    --------+----------+--------
    5, 4, 3 | 8 ,9 ,7  | 2 ,1 ,6
    2, 7, 6 | 5 ,3 ,1  | 8 ,9 ,4
    8, 9, 1 | 4 ,2 ,6  | 5 ,3 ,7
    --------+----------+--------
    6, 1, 9 | 3 ,7 ,8  | 4 ,5 ,2
    3, 2, 7 | 1 ,5 ,4  | 9 ,6 ,8
    4, 8, 5 | 9 ,6 ,2  | 3 ,7 ,1

    */


    // std::string sudokuLine = "..............3.85..1.2.......5.7.....4...1...9.......5......73..2.1........4...9";

    Puzzle puzzle(sudokuLine);

    std::cout << "\n\n---------------------FINAL----------------\n\n";
    puzzle.print();

    // puzzle.findUniquePeer(8,2);
    // puzzle.findUniquePeer(8,3);

    // puzzle.print();


    // std::string filename = "../data/input/easy.txt";
    // std::vector<std::string> allSudokus;

    // if( fileToVector(filename, allSudokus) ){
    //     unsigned int i = 1; 
    //     for (std::string &oneLine : allSudokus) {

    //         std::cout << "Line: " << i++ << std::endl;

    //         Puzzle puzzle(oneLine);
    //         puzzle.print();
 
    //         std::cout <<   "=======================================================================================================\n";
    //     }
    // }


    return 0;
}
